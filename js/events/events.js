// js/events/events.js

// Создаем объект модуля событий
const eventsModule = (function() {

    // --- Список событий ---
    const events = [
        {
            id: 'strange_noise',
            title: 'Странный шум',
            description: 'Из кустов доносится странный скрежет. Что-то движется. Вы чувствуете, что наблюдаете за вами.',
            // Условия появления (можно расширить)
            conditions: (gameState) => true, // Появляется всегда, если вызвано
            choices: [
                {
                    text: 'Подкрасться и посмотреть',
                    outcome: 'Вы осторожно приближаетесь. Внезапно, из тени выпрыгивает странное существо!',
                    effects: {
                        'player.health': -10, // Наносим урон
                        'player.fatigue': 5   // Увеличиваем усталость
                    }
                },
                {
                    text: 'Бросить камень, чтобы отвлечь',
                    outcome: 'Камень с грохотом падает в кусты. Звук смолкает. Вы решаете обойти это место стороной.',
                    effects: {
                        'player.fatigue': 2 // Немного устали
                    }
                },
                {
                    text: 'Уйти как можно тише',
                    outcome: 'Вы медленно отходите, стараясь не издавать ни звука. Скрежет постепенно стихает.',
                    effects: {
                        'player.fatigue': 3 // Немного напряглись
                    }
                }
            ]
        },
        {
            id: 'find_cache',
            title: 'Старый тайник',
            description: 'Ваши поиски приводят вас к полузасыпанному ящику. Похоже, он остался от предыдущих поселенцев или исследователей.',
            conditions: (gameState) => true,
            choices: [
                {
                    text: 'Открыть ящик',
                    outcome: 'Внутри вы находите припасы!',
                    effects: {
                        'inventory.Консервы': 2,
                        'inventory.Вода (бутылка)': 1,
                        'inventory.Аптечка': 1
                    }
                },
                {
                    text: 'Осмотреть ящик снаружи',
                    outcome: 'Ящик выглядит старым, но прочным. Вы замечаете следы какого-то существа рядом.',
                    effects: {
                        // Никаких прямых эффектов, но можно добавить логику в будущем
                    }
                },
                {
                    text: 'Оставить ящик в покое',
                    outcome: 'Лучше не рисковать. Вы уходите, оставив тайник нетронутым.',
                    effects: {
                        // Никаких эффектов
                    }
                }
            ]
        },
        {
            id: 'local_fauna',
            title: 'Местная фауна',
            description: 'Вы замечаете стайку небольших, похожих на крыс животных. Они что-то жадно поедают опавшие плоды.',
            conditions: (gameState) => true,
            choices: [
                {
                    text: 'Попробовать поймать одну',
                    outcome: 'Вам удается схватить одну из тварей. Она довольно сочная. Это может быть еда, если вы голодны.',
                    effects: {
                        'player.hunger': -15, // Уменьшаем голод
                        'inventory.Мясо местное (сырое)': 1
                    }
                },
                {
                    text: 'Понаблюдать за ними',
                    outcome: 'Наблюдая, вы замечаете, что они избегают определенную часть растений. Интересно, почему?',
                    effects: {
                        // Никаких прямых эффектов
                    }
                },
                {
                    text: 'Отпугнуть их',
                    outcome: 'Вы кричите и машете руками. Стая с визгом разбегается. Вы чувствуете себя немного глупо.',
                    effects: {
                        'player.fatigue': 2
                    }
                }
            ]
        },
        {
            id: 'broken_shelter',
            title: 'Разрушенное укрытие',
            description: 'Вы натыкаетесь на полуразрушенную конструкцию, похожую на временный приют. Стены из металлических листов и пластика.',
            conditions: (gameState) => true,
            choices: [
                {
                    text: 'Обследовать внутри',
                    outcome: 'Внутри темно и пыльно. Вы находите немного полезных материалов.',
                    effects: {
                        'inventory.Металлолом': 3,
                        'inventory.Пластик': 2
                    }
                },
                {
                    text: 'Попробовать починить',
                    outcome: 'Вы потратили много сил, но немного укрепили конструкцию. Это может стать временным убежищем.',
                    effects: {
                        'player.fatigue': 10 // Много устали
                        // В будущем можно добавить флаг "shelter_repaired" и эффекты от него
                    }
                },
                {
                    text: 'Осмотреть окрестности',
                    outcome: 'Осмотрев территорию вокруг, вы находите следы других существ. Похоже, это место кто-то использует.',
                    effects: {
                        // Никаких прямых эффектов
                    }
                }
            ]
        }
        // --- Добавьте больше событий сюда ---
    ];

    // --- Функция для получения случайного события ---
    function getRandomEvent(gameState) {
        // Фильтруем события по условиям
        const availableEvents = events.filter(event => event.conditions(gameState));

        if (availableEvents.length === 0) {
            console.log("Нет доступных событий для текущего состояния.");
            return null;
        }

        // Выбираем случайное событие из доступных
        const randomIndex = Math.floor(Math.random() * availableEvents.length);
        return JSON.parse(JSON.stringify(availableEvents[randomIndex])); // Глубокое копирование, чтобы не мутировать исходный объект
    }

    // --- Возвращаем публичный API модуля ---
    return {
        getRandomEvent: getRandomEvent
        // В будущем можно добавить getEventById, loadEvents и т.д.
    };

})(); // Немедленно вызываемая функция для создания модуля

// Делаем модуль доступным глобально (для простоты интеграции с текущим main.js)
// В более современном JS можно использовать export/import
window.eventsModule = eventsModule;
